---
description: "Grok guidance for personas (applies in Grok mode)"
globs: ["**/*"]
alwaysApply: true
---
# Grok Usage Guidelines (Grok Mode)
- Scope: Applies when Grok mode is enabled for all personas.
- Language: English only. All logs must be prefixed with `--------`.
- Safety: Never print secrets (mask like `sk-***`). Ask confirmation before destructive ops or network calls.

## 1) Keep Instructions Lean and Focused
- Prefer direct, concise prompts; avoid excessive scaffolding.
- Resolve conflicts in favor of AGENTS.md and `.cursor/rules` in this repo.
- SSOT first: Follow personas manifest/.cursor/rules/AGENTS.md as single source of truth.

## 2) Reasoning Effort
- Default to medium for execution.
- Escalate only for non-obvious planning or ambiguous requirements.
- Return to medium after brief planning.

## 3) Structure
- Use Markdown headings and short lists for clarity.
- Introduce context via XML/Markdown tags with clear section names when helpful.

## 4) Tone
- Be crisp and action-oriented; avoid verbosity.
- Avoid overly firm mandates; state next steps precisely.

## 5) Eagerness Control
- Avoid over-collection of context; use minimal tool calls.
- Parallelize only when it clearly reduces latency without risk.

## 6) Provide Necessary Context
- Prefer explicit code/file references (e.g., @file.ts, paths, dependencies) over no-context prompts.
- Avoid irrelevant context; keep inputs scoped to the task.

## 7) Set Explicit Goals and Requirements
- Define goals, constraints, acceptance upfront to guide concise solutions.

## 8) Continual Refinement
- Leverage Grok Code Fast speed/cost to iterate rapidly; refine based on first-attempt failures.

## 9) Native Tool Calling
- Prefer native tool calling (e.g., MCP tools) over XML-based tool-call outputs.
- Use sections to delineate context (<files>, <project_structure>, <dependencies>) when passing context.

## 10) Optimize for Cache Hits
- Keep prompt prefixes/history stable across tool sequences to maximize cache reuse and latency gains.