#!/usr/bin/env bash
# Super Prompt CLI Wrapper - Modernized for MCP-first architecture
set -euo pipefail

# Find the root of the super-prompt installation package.
resolve_app_home() {
  local prg="$0"
  while [ -h "$prg" ]; do
    ls_output=$(ls -ld "$prg")
    link=$(expr "$ls_output" : '.*-> \(.*\)$')
    if expr "$link" : '/.*' > /dev/null; then
      prg="$link"
    else
      prg="$(dirname "$prg")/$link"
    fi
  done
  local saved_dir="$(pwd)"
  cd "$(dirname "$prg")/.." >/dev/null
  local app_home="$(pwd -P)"
  cd "$saved_dir" >/dev/null
  printf "%s" "$app_home"
}

APP_HOME="$(resolve_app_home)"

# Find the project root (git root or current directory).
resolve_project_root() {
  if command -v git &>/dev/null && git rev-parse --show-toplevel &>/dev/null; then
    return 0
  fi
  printf "%s" "$(pwd)"
}

PROJECT_ROOT="$(resolve_project_root)"

# Define paths for the venv and the CLI script based on the application's home directory.
VENV_DIR="$APP_HOME/.super-prompt/venv"
ENHANCED_CLI_PATH="$APP_HOME/packages/core-py/super_prompt/main.py"

# Resolve the correct Python executable from the venv.
resolve_venv_python() {
    local platform
    platform="$(uname -s 2>/dev/null || echo "Unknown")"
    local venv_python=""

    case "$platform" in
      Darwin|Linux|*BSD*)
        venv_python="$VENV_DIR/bin/python"
        ;;
      MINGW*|MSYS*|CYGWIN*|Windows_NT*)
        venv_python="$VENV_DIR/Scripts/python.exe"
        ;;
      *)
        if [ -f "$VENV_DIR/bin/python" ]; then
          venv_python="$VENV_DIR/bin/python"
        elif [ -f "$VENV_DIR/Scripts/python.exe" ]; then
          venv_python="$VENV_DIR/Scripts/python.exe"
        fi
        ;;
    esac
    
    if [ -f "$venv_python" ]; then
        printf "%s" "$venv_python"
        return 0
    else
        return 1
    fi
}

# Find the venv Python interpreter.
VENV_PYTHON=$(resolve_venv_python)

# If the venv Python is not found, fall back to the system python3.
if [ -z "$VENV_PYTHON" ]; then
    echo "-------- WARNING: venv not found. Falling back to system python3." >&2
    VENV_PYTHON="python3"
fi

# Check if the CLI script exists.
if [ ! -f "$ENHANCED_CLI_PATH" ]; then
  echo "❌ ERROR: Core CLI script not found at '$ENHANCED_CLI_PATH'" >&2
  echo "   Please try reinstalling with: npm install -g @cdw0424/super-prompt" >&2
  exit 1
fi

# Execute the enhanced CLI script as an installed module,
# passing all original arguments to it.
exec "$VENV_PYTHON" -m super_prompt.main "$@"
